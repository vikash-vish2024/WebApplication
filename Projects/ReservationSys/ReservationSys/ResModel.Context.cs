//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReservationSys
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Reservation_SysEntities1 : DbContext
    {
        public Reservation_SysEntities1()
            : base("name=Reservation_SysEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admin_Details> Admin_Details { get; set; }
        public virtual DbSet<Booked_Ticket> Booked_Ticket { get; set; }
        public virtual DbSet<Canceled_Ticket> Canceled_Ticket { get; set; }
        public virtual DbSet<Passenger> Passengers { get; set; }
        public virtual DbSet<Train_Details> Train_Details { get; set; }
        public virtual DbSet<User_details> User_details { get; set; }
        public virtual DbSet<Class_Fare> Class_Fare { get; set; }
        public virtual DbSet<Seat_Availability> Seat_Availability { get; set; }
    
        public virtual int Add_Fare(Nullable<int> trno, Nullable<int> firstACFare, Nullable<int> scdACFare, Nullable<int> thirdACFare, Nullable<int> sLFare)
        {
            var trnoParameter = trno.HasValue ?
                new ObjectParameter("trno", trno) :
                new ObjectParameter("trno", typeof(int));
    
            var firstACFareParameter = firstACFare.HasValue ?
                new ObjectParameter("FirstACFare", firstACFare) :
                new ObjectParameter("FirstACFare", typeof(int));
    
            var scdACFareParameter = scdACFare.HasValue ?
                new ObjectParameter("ScdACFare", scdACFare) :
                new ObjectParameter("ScdACFare", typeof(int));
    
            var thirdACFareParameter = thirdACFare.HasValue ?
                new ObjectParameter("ThirdACFare", thirdACFare) :
                new ObjectParameter("ThirdACFare", typeof(int));
    
            var sLFareParameter = sLFare.HasValue ?
                new ObjectParameter("SLFare", sLFare) :
                new ObjectParameter("SLFare", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Fare", trnoParameter, firstACFareParameter, scdACFareParameter, thirdACFareParameter, sLFareParameter);
        }
    
        public virtual int Add_Seat(Nullable<int> trno, Nullable<int> firstACSeat, Nullable<int> scdACSeat, Nullable<int> thirdACSeat, Nullable<int> sLSeat)
        {
            var trnoParameter = trno.HasValue ?
                new ObjectParameter("trno", trno) :
                new ObjectParameter("trno", typeof(int));
    
            var firstACSeatParameter = firstACSeat.HasValue ?
                new ObjectParameter("FirstACSeat", firstACSeat) :
                new ObjectParameter("FirstACSeat", typeof(int));
    
            var scdACSeatParameter = scdACSeat.HasValue ?
                new ObjectParameter("ScdACSeat", scdACSeat) :
                new ObjectParameter("ScdACSeat", typeof(int));
    
            var thirdACSeatParameter = thirdACSeat.HasValue ?
                new ObjectParameter("ThirdACSeat", thirdACSeat) :
                new ObjectParameter("ThirdACSeat", typeof(int));
    
            var sLSeatParameter = sLSeat.HasValue ?
                new ObjectParameter("SLSeat", sLSeat) :
                new ObjectParameter("SLSeat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Add_Seat", trnoParameter, firstACSeatParameter, scdACSeatParameter, thirdACSeatParameter, sLSeatParameter);
        }
    
        public virtual int AddPassenger(Nullable<int> pid, Nullable<int> pnr, string pname, Nullable<int> age)
        {
            var pidParameter = pid.HasValue ?
                new ObjectParameter("pid", pid) :
                new ObjectParameter("pid", typeof(int));
    
            var pnrParameter = pnr.HasValue ?
                new ObjectParameter("pnr", pnr) :
                new ObjectParameter("pnr", typeof(int));
    
            var pnameParameter = pname != null ?
                new ObjectParameter("pname", pname) :
                new ObjectParameter("pname", typeof(string));
    
            var ageParameter = age.HasValue ?
                new ObjectParameter("Age", age) :
                new ObjectParameter("Age", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddPassenger", pidParameter, pnrParameter, pnameParameter, ageParameter);
        }
    
        public virtual int cancelBooking(Nullable<int> pnr)
        {
            var pnrParameter = pnr.HasValue ?
                new ObjectParameter("pnr", pnr) :
                new ObjectParameter("pnr", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("cancelBooking", pnrParameter);
        }
    
        public virtual int CancelTicket(Nullable<int> canId, Nullable<decimal> pnrno)
        {
            var canIdParameter = canId.HasValue ?
                new ObjectParameter("canId", canId) :
                new ObjectParameter("canId", typeof(int));
    
            var pnrnoParameter = pnrno.HasValue ?
                new ObjectParameter("pnrno", pnrno) :
                new ObjectParameter("pnrno", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CancelTicket", canIdParameter, pnrnoParameter);
        }
    
        public virtual int SeatManageProc(Nullable<int> trainNo, string @class)
        {
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SeatManageProc", trainNoParameter, classParameter);
        }
    
        public virtual int SeatManageProcCancel(Nullable<int> trainNo, string @class, Nullable<int> seat)
        {
            var trainNoParameter = trainNo.HasValue ?
                new ObjectParameter("TrainNo", trainNo) :
                new ObjectParameter("TrainNo", typeof(int));
    
            var classParameter = @class != null ?
                new ObjectParameter("Class", @class) :
                new ObjectParameter("Class", typeof(string));
    
            var seatParameter = seat.HasValue ?
                new ObjectParameter("Seat", seat) :
                new ObjectParameter("Seat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SeatManageProcCancel", trainNoParameter, classParameter, seatParameter);
        }
    }
}
